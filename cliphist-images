#!/usr/bin/env bash

# this is beyond impractical
# but it works..?

# clipboard history with images using fzf, ueberzugpp, and xclip.
# png images only, since that's what xclip supports.
# every clip is created as an empty file with touch (yes, I know)

# it doubles as a select-to-clipboard menu for
# any folder given, which can then be
# bound as a shortcut: `cliphist add ~/myfolder`

# bind `cliphist add` and `cliphist out` to shortcuts
# to copy text, press your shortcut key for add,
# to copy images, first copy normally, then run your shortcut key
# you'll also need any fzfub wrapper for image previews in fzf
# if you're using dwm or similar, you may need to ensure that the
# window class `fzfmenu` or title `fzf` has floating property

HIST=~/.cache/hist
PLACEHOLDER="<NEWLINE>"
[[ -z $2 ]] && FOLDER=$HIST || FOLDER=$2

output() { # copy directly from command output
		CLIP=$(xclip -i -f -selection clipboard 2>/dev/null)
}

write() { # write current clip into directory, txt or img
		[ -e "$HIST" ] || notify-send "Creating directory $HIST..."; mkdir -p $HIST
		ISIMG=$(xclip -selection clipboard -o -t TARGETS | grep png)

		if [[ -n $ISIMG ]]; then
		   	xclip -selection clipboard -t image/png -o > $HIST/$(date '+%a_%b%d%Y_%H%M%S').png
		else
				CLIP=$(xclip -o -selection primary | xclip -i -f -selection clipboard 2>/dev/null)
				MULTILINE=$(echo "$CLIP" | sed ':a;N;$!ba;s/\n/'"$PLACEHOLDER"'/g')
				touch "$HIST/$MULTILINE"
		fi
		notify-send " clipped"
}

sel() { # select from clip history and re-copy to clipboard
		st -c fzfmenu -n fzfmenu -T fzf -g "100x12-260+270" -e dash -c "fzfub $FOLDER > $HIST/txt"
		SELECTION=$(awk -v var="$FOLDER" '$0 ~ var {sub(".*" var, ""); print}' < $HIST/txt)
		[[ -z $SELECTION ]] && exit 0
		if [[ -n $(file -b --mime-type $FOLDER/$SELECTION | grep png) ]]; then 
				xclip -i -selection clipboard -t image/png $FOLDER/$SELECTION && notify-send -i $FOLDER/$SELECTION "reclipped img "
		else echo ${SELECTION:1} | sed "s/$PLACEHOLDER/\n/g" | xclip -i -selection clipboard && notify-send "reclipped "
		fi
}

del() {
		notify-send "select a clip to delete...!"
		st -c fzfmenu -n fzfmenu -T fzf -g "100x12-260+270" -e dash -c "fzfub $HIST > $HIST/txt"
		SELECTION=$(awk -v var="$FOLDER" '$0 ~ var {sub(".*" var, ""); print}' < $HIST/txt)
		[[ -z $SELECTION ]] && exit 0
		if [[ -n $(file -b --mime-type $HIST/$SELECTION | grep png) ]]; then 
				rm $HIST/$SELECTION && notify-send "img clip deleted"
		else rm $HIST/$(echo $SELECTION | sed "s/$PLACEHOLDER/\n/g") && notify-send "clip deleted"
		fi
}

case "$1" in
		add*) write ;;
		out*) output && write ;;
		sel*) sel ;;
		del*) del ;;
		*) printf "$0 | File: $HIST\n\nadd - copies primary selection to clipboard, and adds to history directory\nout - pipe commands to copy output to clipboard, and add to history directory\nsel - select from history file with fzf and recopy!\ndel - delete from history!\n" ; exit 0 ;;
esac
